<html style="overflow-y: auto; background: #f1f1f1">
  <head>
    <script type="text/javascript" src="jquery.js"></script>
    
	<link type="text/css" href="jquery.ui.custom.css" rel="stylesheet" />
    <script type="text/javascript" src="jquery.ui.core.min.js"></script>    
    <script type="text/javascript" src="jquery.ui.widget.min.js"></script>    
    <script type="text/javascript" src="jquery.ui.tabs.min.js"></script>    
            
    <link type="text/css" rel="stylesheet" href="JQuerySpinBtn.css" />
    <script type="text/javascript" src="JQuerySpinBtn.js"></script>    
    
	<script type="text/javascript">
	$(function() {
		$("#tabs").tabs();
	});
	
	$(document).ready(function() {
		//top.resizeTo($(window).width(), $(document).height() + (top.outerHeight - $(window).height()));
	});
	</script>

  <style>
      @media only screen and (orientation: landscape) {
          .flex-container {
              display: flex;
          }
          .text {
              font-size: 22px;
          }
          .text button {
              font-size: 22px;
          }
      }
      @media only screen and (orientation: portrait) {
          tr > td:first-child {
              width: 200px;
          }
          .text {
              font-size: 24px;
          }
          .text button {
              font-size: 24px;
          }
      }
      button {
          border-style: none;
          background: #515151;
          border-radius: 3px;
          color: #f1f1f1;
          padding: 6px 8px;
      }
      .slider {
           -webkit-appearance: none;
           padding: 0 4px;
           width: 100%;
           height: 25px;
           background: #515151;
           outline: none;
           border-radius: 20px;
           -webkit-transition: .2s;
           transition: opacity .2s;
       }
      .slider::-webkit-slider-thumb {
          -webkit-appearance: none;
          appearance: none;
          border-radius: 9px;
          width: 18px;
          height: 18px;
          background: #13C4A5;
      }
      .fill {
          display: flex;
          justify-content: center;
          align-items: center;
      }
      .fill img {
          flex-shrink: 1;
          min-width: 100%;
          max-height: 100%;
      }
  </style>
  </head>
  <body style="overflow-y: auto; border: 5px solid #515151; border-radius: 5px">
    <script type="text/javascript">
      const defaults = {
        Brightness: 0,
        Contrast: 128,
        Saturation: 128,
        Hue: 0
      };
      let originalValues = [];

      function setControl(dest, plugin, id, group, value) {
          $.get('./?action=command&dest=' +		dest +
          						'&plugin=' +	plugin+
          						'&id='+ 		id + 
          						'&group='+ 		group + 
          						'&value=' +		value );
        }

        function setControl_bool(dest, plugin, id, group, value) {
          if (value == false)
            setControl(dest, plugin, id, group, 0);
          else
            setControl(dest, plugin, id, group, 1);
        }

        function setControl_string(dest, plugin, id, group, value) {
          if (value.length < minlength) {
            alert("The input string has to be least"+minlength+" characters!");
            return;
          }
          $.get('./?action=command&dest=' +		dest +
          						'&plugin=' +	plugin+
          						'&id='+ 		id + 
          						'&group='+ 		group + 
          						'&value=' +		value , 
			function(data){
             alert("Data Loaded: " + data);
           });
        }
                        
        function setResolution(plugin, controlId, group, value) {
	        $.get('./?action=command&dest=0'	+		// resolution command always goes to the input plugin
					'&plugin=' +	plugin+
					'&id'+ 			controlId + 
					'&group=1'	+					// IN_CMD_RESOLUTION == 1,		
					'&value=' +		value, 
				function(data){
				     if (data == 0) {
				     	$("#statustd").text("Success");
				     } else {
				     	$("#statustd").text("Error: " + data);
				     }
		        }
	        );
        }
                
        function addControl(plugin_id, suffix) {
          const permittedOptions = [
            'Brightness',
            'Contrast',
            'Saturation',
            'Hue'
          ];

          const dest = suffix=="in"?0:1;

          $.getJSON(suffix+"put_"+plugin_id+".json",
            function(data) {
              $.each(data.controls, function(i,item){
                if(permittedOptions.includes(item.name)) {
                  originalValues.push(item);
                  $('<tr/>').attr("id", "tr_"+suffix+"_"+plugin_id+"_"+item.group+"_"+item.id).appendTo("#controltable_"+suffix+"-"+plugin_id);
                  // BUTTON type controls does not have a label
                  if (item.type == 4) {
                    $("<td/>").appendTo("#tr-"+item.id);
                  } else {
                    if (item.type == 6) { // Class type controls
                      $("<td/>").text(item.name).attr("style", "font-weight:bold;").appendTo("#tr_"+suffix+"_"+plugin_id+"_"+item.group+"_"+item.id);
                      return;
                    } else {
                      $("<td/>").text(item.name).appendTo("#tr_"+suffix+"_"+plugin_id+"_"+item.group+"_"+item.id);
                    }
                  }
                  $("<td/>").attr("id", "td_ctrl_"+suffix+"_"+plugin_id+"_"+item.group+"-"+item.id)
                    .appendTo("#tr_"+suffix+"_"+plugin_id+"_"+item.group+"_"+item.id);
                  if((item.type == 1) || (item.type == 5)) { // integer type controls
                    if ((item.id == 10094852) && (item.group == 1) && (item.dest == 0)) { //V4L2_CID_PAN_RELATIVE
                      $("<button/>")
                        .attr("type", "button")
                        .attr("style", "width: 50%; height: 100%;")
                        .text("<")
                        .click(function(){setControl(dest, plugin_id, item.id, item.group, 200);})
                        .appendTo("#td_ctrl_"+suffix+"_"+plugin_id+"_"+item.group+"-"+item.id);
                      $("<button/>")
                        .attr("type", "button")
                        .attr("style", "width: 50%; height: 100%;")
                        .text(">")
                        .click(function(){setControl(dest, plugin_id, item.id, item.group, -200);})
                        .appendTo("#td_ctrl_"+suffix+"_"+plugin_id+"_"+item.group+"-"+item.id);
                    } else if ((item.id == 10094853) &&
                      (item.group == 1) &&
                      (item.dest == 0)){ // V4L2_CID_TILT_RELATIVE
                      $("<button/>")
                        .attr("type", "button")
                        .attr("style", "width: 50%; height: 100%;")
                        .text("^")
                        .click(function(){setControl(dest, plugin_id, item.id, item.group, -200);})
                        .appendTo("#td_ctrl_"+suffix+"_"+plugin_id+"_"+item.group+"-"+item.id);
                      $("<button/>")
                        .attr("type", "button")
                        .attr("style", "width: 50%; height: 100%;")
                        .text("Ë‡")
                        .click(function(){setControl(dest, plugin_id, item.id, item.group, 200);})
                        .appendTo("#td_ctrl_"+suffix+"_"+plugin_id+"_"+item.group+"-"+item.id);
                    } else { // another non spec control
                      var options = {min: item.min, max: item.max, step: item.step,}
                      $("<input/>")
                        .attr("value", item.value)
                        .attr("min", item.min)
                        .attr("max", item.max)
                        .attr("step", item.step)
                        .attr("class", "slider")
                        .attr("style", "width: 100%")
                        .attr("type", "range")
                        .attr("id", "slider-"+item.id)
                        .bind("change", function() {setControl(dest, plugin_id, item.id, item.group, $(this).val());})
                        .appendTo("#td_ctrl_"+suffix+"_"+plugin_id+"_"+item.group+"-"+item.id);
                    }
                  } else if (item.type == 2) { // boolean type controls
                    if (item.value == "1")
                      $("<input/>")
                        .attr("type", "checkbox")
                        .attr("checked", "checked")
                        .change(function(){setControl_bool(dest, plugin_id, item.id, item.group, ($(this).attr("checked")?1:0));})
                        .appendTo("#td_ctrl_"+suffix+"_"+plugin_id+"_"+item.group+"-"+item.id);
                    else
                      $("<input/>")
                        .attr("type", "checkbox")
                        .change(function(){setControl_bool(dest, plugin_id, item.id, item.group, ($(this).attr("checked")?1:0));})
                        .appendTo("#td_ctrl_"+suffix+"_"+plugin_id+"_"+item.group+"-"+item.id);
                  } else if (item.type == 7) { // string type controls
                    $("<input/>").attr("value", item.value).appendTo("#td_ctrl_"+suffix+"_"+plugin_id+"_"+item.group+"-"+item.id);
                  } else if (item.type == 3) { // menu
                    $("<select/>")
                      .attr("name", "select-"+item.id)
                      .attr("id", "menu-"+item.id)
                      .attr("style", "width: 100%;")
                      .change(function(){setControl(dest, plugin_id, item.id, item.group, $(this).val());})
                      .appendTo("#td_ctrl_"+suffix+"_"+plugin_id+"_"+item.group+"-"+item.id);
                    $.each(item.menu, function(val, text) {
                      if (item.value == val) {
                        $("#menu-"+item.id).append($('<option></option>').attr("selected", "selected").val(val).html(text));
                      } else {
                        $("#menu-"+item.id).append($('<option></option>').val(val).html(text));
                      }
                    });
                  } else if (item.type == 4) { // button type
                    $("<button/>")
                      .attr("type", "button")
                      .attr("style", "width: 100%; height: 100%;")
                      .text(item.name)
                      .click(function(){setControl(dest, plugin_id, item.id, item.group, 0);})
                      .appendTo("#td_ctrl_"+suffix+"_"+plugin_id+"_"+item.group+"-"+item.id);
                  } else if (item.type == 7) { // string  type
                    $("<input/>")
                      .attr("type", "text")
                      .attr("maxlength", item.max)
                      .change(function(){setControl_string(dest, plugin_id, item.id, item.group, $(this).text());})
                      .appendTo("#td_ctrl_"+suffix+"_"+plugin_id+"_"+item.group+"-"+item.id);
                  } else {
                    alert("Unknown control type: "+item.type);
                  }
                }
              });
            }
          );
        }

	    $.getJSON("program.json",
	    	function(data) {
	    		// $.each(data.inputs,
	    		// 	function(i,input){
          //     $("<li/>").attr("id", "li_in-"+input.id).appendTo("#ul_tabs");
          //     $("<a/>").attr("href", "#controldiv_in-"+input.id)
          //         .text(input.name).appendTo("#li_in-"+input.id);
          //     $("<div/>").attr("id", "controldiv_in-"+input.id).appendTo("#tabs");
          //     $("<table/>").attr("id", "controltable_in-"+input.id).appendTo("#controldiv_in-"+input.id);
		    	// 	}
	    		// )

	    		// $.each(data.outputs,
	    		// 	function(i,output){
		      //   		$("<li/>").attr("id", "li_out-"+output.id).appendTo("#ul_tabs");
					// 	$("<a/>").attr("href", "#controldiv_out-"+output.id)
					// 		.text(output.name).appendTo("#li_out-"+output.id);
					// 	$("<div/>").attr("id", "controldiv_out-"+output.id).appendTo("#tabs");
					// 	$("<table/>").attr("id", "controltable_out-"+output.id).appendTo("#controldiv_out-"+output.id);
		    	// 	}
	    		// )
	    	
	    		$.each(data.inputs, 
	    			function(i,input){
	    				addControl(input.id, "in");
		    		}
	    		)
	    		
	    		$.each(data.outputs,
	    			function(i,output){
	    				addControl(output.id, "out");
		    		}
	    		)
	    		
	    		// $( "#tabs" ).tabs();
	    	}
	    );

      function save() {
        const postValues = {};

        originalValues.forEach((item) => {
          const val = $(`#slider-${item.id}`).val();
          postValues[item.name] = val;
          item.value = val;
        });

        const params = [];
        if (postValues.Brightness) params.push(`b=${postValues.Brightness}`);
        if (postValues.Contrast) params.push(`c=${postValues.Contrast}`);
        if (postValues.Saturation) params.push(`s=${postValues.Saturation}`);
        if (postValues.Hue) params.push(`h=${postValues.Hue}`);

        if (params.length) {
          const url = '/cgi-bin/save_capture_settings.sh?' + params.join('&');
          $.get(url);
        }

      }
      function reset() {
        Object.entries(defaults).forEach(([key, value]) => {
          const item = originalValues.find((val) => key === val.name);
          if (item) {
            setValue(item, value);
          }
        })

      }
      function restore() {
        originalValues.forEach((item) => {
          setValue(item, item.value);
        })
      }
      function setValue(item, value) {
        $(`#slider-${item.id}`).val(value);
        setControl(0, 0, item.id, item.group, value);
      }

    </script>
    <div style="padding: 1rem">
      <img src="./logo.png" alt="Logo"/>
    </div>
    <div class="flex-container">
      <div style="flex-grow: 2; margin: 1rem; border: 1px solid black" class="fill">
        <img src="./?action=stream" alt="Camera stream" />
        <button href="./">Full Screen</button>
      </div>
      <div style="flex-grow: 1; padding: 1rem; font-family: Roboto, sans-serif">
        <table id="controltable_in-0" style="margin: 0 0 1rem 0; font-size: 24px; width: 100%" class="text"></table>
        <div style="display: flex; flex-direction: column" class="text">
          <button style="margin: 0 0 0.5rem 0" onclick="save()">Save Settings</button>
          <button style="margin: 0 0 0.5rem 0" onclick="reset()">Reset to Factory Defaults</button>
          <button onclick="restore()">Restore Previous Settings</button>
        </div>
      </div>
    </div>

  </body>
</html>
